# Generated by Django 5.2.3 on 2025-10-17 07:21

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150, verbose_name='عنوان دوره')),
                ('slug', models.SlugField(max_length=160, unique=True, verbose_name='اسلاگ')),
                ('level', models.IntegerField(choices=[(1, 'مقدماتی'), (2, 'متوسط'), (3, 'پیشرفته')], db_index=True, verbose_name='سطح آموزش')),
                ('length_minutes', models.PositiveIntegerField(default=0, verbose_name='طول دوره (دقیقه)')),
                ('has_certificate', models.BooleanField(default=False, verbose_name='گواهینامه دارد؟')),
                ('has_exam', models.BooleanField(default=False, verbose_name='آزمون دارد؟')),
                ('course_format', models.CharField(choices=[('video', 'ویدیویی'), ('text', 'متنی'), ('mixed', 'ترکیبی')], max_length=50, verbose_name='فرمت آموزش')),
                ('software', models.TextField(blank=True, null=True, verbose_name='نرم\u200cافزار موردنیاز')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='قیمت دوره')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='قیمت با تخفیف')),
                ('demo_pic', models.ImageField(blank=True, null=True, upload_to='courses/demos/', verbose_name='تصویر دمو')),
                ('main_pic', models.ImageField(blank=True, null=True, upload_to='courses/main/', verbose_name='تصویر اصلی')),
                ('short_description', models.CharField(blank=True, max_length=300, null=True, verbose_name='توضیح کوتاه')),
                ('description', models.TextField(verbose_name='توضیحات دوره')),
                ('is_published', models.BooleanField(default=False, verbose_name='منتشر شده')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ انتشار')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ ویرایش')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='category.category', verbose_name='دسته بندی')),
                ('prerequisite', models.ManyToManyField(blank=True, help_text='دوره\u200cهایی که باید قبل از این گذرانده شوند', related_name='required_for', to='course.course', verbose_name='پیش\u200cنیازها')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to=settings.AUTH_USER_MODEL, verbose_name='مدرس دوره')),
            ],
            options={
                'verbose_name': 'دوره',
                'verbose_name_plural': 'دوره\u200cها',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='عنوان فصل')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات فصل')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ترتیب نمایش')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='course.course', verbose_name='دوره')),
            ],
            options={
                'verbose_name': 'فصل',
                'verbose_name_plural': 'فصل\u200cها',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=160, verbose_name='اسلاگ')),
                ('title', models.CharField(max_length=150, verbose_name='عنوان درس')),
                ('description', models.TextField(blank=True, verbose_name='محتوای درس')),
                ('video', models.URLField(blank=True, help_text='لینک ویدیو را وارد کنید', max_length=500, null=True, verbose_name='لینک ویدیو')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='مدت زمان')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ترتیب نمایش')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='course.chapter', verbose_name='فصل')),
            ],
            options={
                'verbose_name': 'درس',
                'verbose_name_plural': 'درس\u200cها',
                'ordering': ['order'],
            },
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['category'], name='course_cour_categor_ce9f5d_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['teacher'], name='course_cour_teacher_dc98d0_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['level'], name='course_cour_level_9054a3_idx'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='price_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(condition=models.Q(('discount_price__lte', models.F('price')), ('discount_price__isnull', True), _connector='OR'), name='discount_lte_price'),
        ),
        migrations.AddConstraint(
            model_name='chapter',
            constraint=models.UniqueConstraint(fields=('course', 'order'), name='unique_chapter_order_per_course'),
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(fields=('chapter', 'order'), name='unique_lesson_order_per_chapter'),
        ),
    ]
